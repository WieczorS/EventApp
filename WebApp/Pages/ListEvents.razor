@page "/listevents"

@using Radzen.Blazor
@using EventApp1.Models
@using System.Data.SqlTypes
@using Blazored.LocalStorage
@inject HttpClient HttpClient
@inject ILocalStorageService _LocalStorage
@inject IHttpClientFactory ClientFactory


<h1>Lista wydarzeń ddddd</h1>

@if (events == null)
{
    <p>Ładowanie...</p>
}
else if (events.Count == 0)
{
    <p>Brak wydarzeń.</p>
}
else
{
    <RadzenCard>
        <RadzenCardHeader>
            <h3>Wydarzenia</h3>
        </RadzenCardHeader>
        <RadzenCard>
            <RadzenCardHeader>
                <h4>Lista</h4>
            </RadzenCardHeader>
            <RadzenCard>
                <RadzenDataGrid TItem="Event" Data="@events" PageSize="10">
                    <Columns>
                    <RadzenDataGridColumn TItem="Event" Property="Name" Title="Tytuł"/>
                    <RadzenDataGridColumn TItem="Event" Property="Description" Title="Data"/>
                    <RadzenDataGridColumn TItem="Event" Property="Location" Title="Lokalizacja"/>
                    </Columns>
                </RadzenDataGrid>
            </RadzenCard>
        </RadzenCard>
    </RadzenCard>
}

@code {
    private List<Event> events;

    protected override async Task OnInitializedAsync()
    {
        var client = ClientFactory.CreateClient("Api");
        
        //Bez clienta   HttpClient.DefaultRequestHeaders.Add("Authorization", $"Bearer {token}");
        events = await client.GetFromJsonAsync<List<Event>>("http://localhost:5175/Event/all");
    }

  
}